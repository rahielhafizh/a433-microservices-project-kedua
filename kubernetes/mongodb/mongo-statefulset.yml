apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-statefulset
spec:
  serviceName: "mongo-service" # Nama layanan yang digunakan oleh setiap pod
  replicas: 1 # Jumlah replika stateful set yang diinginkan
  selector:
    matchLabels:
      app: mongo # Seleksi pod berdasarkan label "app: mongo"
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest # Gambar Docker yang digunakan untuk container
          ports:
            - containerPort: 27017 # Port yang digunakan oleh container MongoDB
          env:
            - name: MONGO_INITDB_ROOT_USERNAME_FILE
              value: "/etc/mongo-credentials/MONGO_ROOT_USERNAME" # Nama file tempat menyimpan username root MongoDB
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: "/etc/mongo-credentials/MONGO_ROOT_PASSWORD" # Nama file tempat menyimpan password root MongoDB
          volumeMounts:
            - name: data-volume
              mountPath: /data/db # Path tempat menyimpan data MongoDB
            - name: config-volume
              mountPath: /config # Path tempat menyimpan konfigurasi MongoDB
            - name: credentials-volume
              mountPath: /etc/mongo-credentials # Path tempat menyimpan credentials MongoDB
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: mongo-pvc # Mengacu pada nama claim
        - name: config-volume
          configMap:
            name: mongo-configmap # Mengacu pada nama ConfigMap
        - name: credentials-volume
          secret:
            secretName: mongo-secret # Mengacu pada nama Secret
